<!DOCTYPE html>
<!--
This is a starter template page. Use this page to start your new project from
scratch. This page gets rid of all links and provides the needed markup only.
-->
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta http-equiv="x-ua-compatible" content="ie=edge">

  <title>RainFLOW</title>

  <!-- Font Awesome Icons -->
  <link rel="stylesheet" href="/plugins/fontawesome-free/css/all.min.css">
  <!-- Theme style -->
  
  <!-- Google Font: Source Sans Pro -->
  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">
  
  <!-- Leaflet -->
  <link rel="stylesheet" href="/css/leaflet.css">
  <link rel="stylesheet" href="/css/leaflet.label.css">
  <link rel = "stylesheet" href = "/css/adminlte.css">	
  <link rel = "stylesheet" href = "/css/adminlte.min.css">
 
  <link rel="stylesheet" href="/src/L.Control.Sidebar.css" />
    <!--[if lte IE 8]><link rel="stylesheet" href="https://cdn.leafletjs.com/leaflet-0.7.2/leaflet.ie.css" /><![endif]-->
	<link rel="stylesheet" href="/css/Control.Geocoder.css" />
	<link rel="stylesheet" href="/css/L.Control.Locate.min.css" />

<style>
html , body { height: 100%; overflow:hidden; padding:0; margin:0 }  
</style>

<!-- jQuery -->
<script src="/plugins/jquery/jquery.min.js"></script>






</head>
<body class="hold-transition sidebar-mini" style="height:100vh">
<div class="wrapper">

  <!-- Navbar -->
  <nav class="main-header navbar navbar-expand navbar-white navbar-light hold-transition stick">
    <!-- Left navbar links -->
    <ul class="navbar-nav">
      <li class="nav-item">
        <a class="nav-link" data-widget="pushmenu" href="#"><i class="fas fa-bars"></i></a>
      </li>
	  <li>
	  <a href="#"><img src = "Logo.png" style ="width:150px;height:50px" alt = "RainFLOW Logo"></a>
	  </li>
    </ul>
	


    <!-- Right navbar links -->
    <ul class="navbar-nav ml-auto">
	  <li>

		<a href="http://dashboard.rainflow.live"   class="nav-link"> DASHBOARD</a>

	  </i>
	  </li>
    </ul>
  </nav>
  <!-- /.navbar -->

  <!-- Main Sidebar Container -->
  <aside class="main-sidebar sidebar-dark-primary elevation-4">
    <!-- Brand Logo -->
    <a href="starter.html" class="brand-link">
	  <center>
      <span class="brand-text font-weight-bolder">RainFLOW</span>
	  </center>
    </a>


    <!-- Sidebar -->
    <div class="sidebar" >
      <!-- Sidebar user panel (optional) -->
	  <!-- <div class="user-panel mt-3 pb-3 mb-3 d-flex">
        <div class="image">
          <img src="/img/user2-160x160.jpg" class="img-circle elevation-2" alt="User Image">
        </div>
        <div class="info">
          <a href="#" class="d-block">User</a>
        </div>
     </div>
	 -->

	


      <!-- Sidebar Menu -->
	  <div>
      <nav class="mt-2" style="height:100vh">
        <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">

          <li class="nav-item has-treeview menu-open">
            <a href="#" class="nav-link active">
              <i class="nav-icon fas fa-cube"></i>
              <p>
                Node Source
                <i class="right fas fa-angle-left"></i>
              </p>
            </a>
            <ul class="nav nav-treeview">
             <!-- <li class="nav-item">
                <a href="/" class="nav-link active">
                  <i class="far fa-circle nav-icon"></i>
                  <p>All Nodes</p>
                </a>
              </li> -->
              <li class="nav-item">
                <a href="/" class="nav-link active">
                  <i class="far fa-circle nav-icon"></i>
                  <p>RAFT Devices</p>
                </a>
              </li>
			  <li class="nav-item">
                <a href="/mobile" class="nav-link">
                  <i class="far fa-circle nav-icon" ></i>
                  <p>Mobile Devices</p>
                </a>
              </li>
			  </ul>
			  </li>
			  
			  <p><p>
			  
			  <li class="nav-item has-treeview menu-open">
            <a href="#" class="nav-link">
              <i class="nav-icon far fa-plus-square"></i>
              <p>
                Filters
                <i class="fas fa-angle-left right"></i>
              </p>
            </a>
            <ul class="nav nav-treeview">
				<li class="nav-item">
                <a href="/mobile" class="nav-link" id = "nofilter" >
                  <i class="far fa-circle nav-icon"></i>
                  <p> No Filter </p>
                </a>
              </li>
              <li class="nav-item">
                <a href="/rain" class="nav-link" id = "rainbutton" >
                  <i class="far fa-circle nav-icon"></i>
                  <p> Rain Intensity </p>
                </a>
              </li>
              <li class="nav-item">
                <a href="/flood" class="nav-link" id = "floodbutton" >
                  <i class="far fa-circle nav-icon"></i>
                  <p>Flood Level</p>
                </a>
              </li>
			  <li class="nav-item">
                <a href="#" class="nav-link" id = "polygonbutton" onclick = "polygonfilter()">
                  <i class="far fa-circle nav-icon" ></i>
                  <p>Area Highlights</p>
                </a>
              </li>
			  </ul>
			  </li>
			 
        </ul> 
      </nav>
      <!-- /.sidebar-menu -->
    </div>
    <!-- /.sidebar -->
  </aside>
  <!-- Content Wrapper. Contains page content -->
  <div class="content-wrapper">
	  <div id="map" style="width: 1280px%; height: 100vh"></div>
  </div>
  <!-- /.content-wrapper -->

</div>
<!-- ./wrapper -->
	
	<div id="sidebar" >

    </div>
<!-- REQUIRED SCRIPTS -->


<!-- Bootstrap 4 -->
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>

<!-- AdminLTE App -->
<script src="/js/adminlte.min.js"></script>

<!-- Leaflet -->
<script src="/js/leaflet-src.js"></script>
<script src="/js/leaflet.label.js"></script>
<script src="/js/leaflet.canvas-markers.js"></script>
<script src="https://unpkg.com/leaflet-canvas-marker@0.2.0"></script>
<script src="/src/L.Control.Sidebar.js"></script>
<script src="/js/leaflet.geometryutil.js"></script>

<script src="/js/Control.Geocoder.js"></script>
<script src="/js/L.Control.Locate.js"></script>

 <script>
	var window_height = $(window).height(),
      header_height = $(".main-header").height();
$("#myDiv").css("height", window_height - header_height);

   $('[data-widget="pushmenu"]').PushMenu('collapse');



  var map = L.map('map').setView([14.6047, 120.97833], 10);
  var x = 0;

        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
		maxZoom: 20,
		attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, ' +
			'<a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
			'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
		id: 'mapbox/streets-v11'
	}).addTo(map);
	
	var polyLayer = L.layerGroup();
	
	if (L.Browser.mobile) {
   map.removeControl(map.zoomControl);
}


 var getLocation = L.control.locate({
		position: 'topright',
		initialZoomLevel: 13,
		drawCircle: false,
		strings: {
        title: "Click to go to your location"
		}
	}).addTo(map);
	
	
	getLocation.start();
  
   
	
	
	var geocoder = L.Control.geocoder({
		position: 'topleft'
	}).addTo(map);

/////////////////////////// MARKER ICONS //////////////////////////////////////////
	var greengreen = L.icon({
    iconUrl: '1-1-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });

	var greenlime = L.icon({
    iconUrl: '1-2-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var greenyellow = L.icon({
    iconUrl: '1-3-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var greenorange = L.icon({
    iconUrl: '1-4-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var greenred = L.icon({
    iconUrl: '1-5-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  
  var limegreen = L.icon({
    iconUrl: '2-1-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });

	var limelime = L.icon({
    iconUrl: '2-2-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var limeyellow = L.icon({
    iconUrl: '2-3-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var limeorange = L.icon({
    iconUrl: '2-4-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var limered = L.icon({
    iconUrl: '2-5-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var yellowgreen = L.icon({
    iconUrl: '3-1-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });

	var yellowlime = L.icon({
    iconUrl: '3-2-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var yellowyellow = L.icon({
    iconUrl: '3-3-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var yelloworange = L.icon({
    iconUrl: '3-4-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var yellowred = L.icon({
    iconUrl: '3-5-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var orangegreen = L.icon({
    iconUrl: '4-1-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });

	var orangelime = L.icon({
    iconUrl: '4-2-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var orangeyellow = L.icon({
    iconUrl: '4-3-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var orangeorange = L.icon({
    iconUrl: '4-4-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var orangered = L.icon({
    iconUrl: '4-5-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var redgreen = L.icon({
    iconUrl: '5-1-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });

	var redlime = L.icon({
    iconUrl: '5-2-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var redyellow = L.icon({
    iconUrl: '5-3-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var redorange = L.icon({
    iconUrl: '5-4-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });
  
  var redred = L.icon({
    iconUrl: '5-5-01.png',

    iconSize: [20, 33], // size of the icon
    shadowSize: [50, 64], // size of the shadow
    iconAnchor: [10, 33], // point of the icon which will correspond to marker's location
    popupAnchor: [0, -55]
  });

 ////////////////////////////////////////////////////////////////////////////////
  
		
        var sidebar = L.control.sidebar('sidebar', {
            closeButton: true,
            position: 'right'
			
        });
        map.addControl(sidebar);

        setTimeout(function () {
            sidebar.hide();
        }, 500);

        


        map.on('click', function (e) {
          sidebar.hide();
        })
	

	var LOCmarker;
	var arr = [];
	var IDcheck = 0;
	var myStyle =
		{
			fillColor: '#1c9099',
			weight: 3
		};
		
	var sortedarray = [];
	var finalarray = [];
	var flag = 0;
	var t = '{{filter}}';

	
	function polygonfilter(){
		if(document.getElementById("polygonbutton").classList.contains('active')){
			document.getElementById("polygonbutton").classList.remove('active');
			if(t == "none"){
				document.getElementById("nofilter").classList.add('active');
			}
			map.removeLayer(polyLayer);
		} else{
			document.getElementById("polygonbutton").classList.add('active');
			polyLayer.addTo(map);
			document.getElementById("nofilter").classList.remove('active');
		}
	}
	
	if(t == "rain"){
		document.getElementById("rainbutton").classList.add('active');
	}
	
	if(t == "flood"){
		document.getElementById("floodbutton").classList.add('active');
	}

         {{#each data}}
		 
	
			console.log("polyID = " + {{polyID}});
			
			if(IDcheck == {{polyID}} - 1){
			
			if({{numID}} != 1){
				var initiallength = arr.length;
				var i;
				var j;
			
				flag = 0;
				sortedarray = [];
				finalarray = []
				
				for(j = 0; j < initiallength- 1; j++){
					console.log("Arr before splicing: " + arr);
					if(flag == 0){
						finalarray.push(arr[0]);
						console.log("final array: " + finalarray);
						arr.splice(0, 1);
						flag++
					} 
					
					sortedarray = [];
					
					for(i = 0; i < arr.length; i++){
						var x = L.GeometryUtil.distance(map, finalarray[j], arr[i]);
						sortedarray.push(x);
						console.log ("Distance from finalarr[" + j +"] to arr[" + i +"] is " + x);
						}
						
						var smallest = Math.min.apply(Math, sortedarray);
						var x = sortedarray.indexOf(smallest);
						finalarray.push(arr[x]);
						console.log("x is: " + x);
						arr.splice(x,1);
						
						console.log("smallest:" + smallest);
						console.log("Arr after splicing: " + arr);
						console.log("final array: " + finalarray);
						console.log("j is " + j);
						
				}
			
			}

			var polygon = L.polygon(finalarray).setStyle(myStyle).addTo(polyLayer);
			arr = [];
			 console.log("NEW POLYGON ID DETECTED. polyID is " + {{polyID}}  + " ID is " + IDcheck);
			 IDcheck++;
			var latilongi = L.latLng({{latitude}}, {{longitude}});
			arr.push(latilongi);
			 
		//	x++; //x will change if a new polygon ID is detected. polygon IDs are already assoted in MySQL
			//y = 0;
			} else{
			console.log("EXISTING POLYGON ID. polyID is " + {{polyID}}  + " ID is " + IDcheck);
			var latilongi = L.latLng({{latitude}}, {{longitude}});
			arr.push(latilongi);
			
			}
			
			console.log("array[] is " + arr);
			
			

			var flood = {{waterdepth}};
			var rain = {{rainintensity}};
			
			if(t == "flood"){ // t = 1 when rain filter is clicked on the menu, default value of t is 0
				document.getElementById("nofilter").classList.remove('active');
				
				if(flood < 20){
				LOCmarker = greengreen;
			
					
				}else if(flood >= 20 && flood < 40){
					LOCmarker = limelime;
					
					
				}else if (flood >= 40 && flood <80){
					LOCmarker = yellowyellow;
					
					
				}else if (flood >= 80 && flood < 120){
					LOCmarker = orangeorange;
					
					
				}else if(flood >= 120){
					LOCmarker = redred;
					
				}
				
				var markerHome = L.marker([{{latitude}}, {{longitude}}], { icon: LOCmarker }).on('click', function () {
					sidebar.show();
					sidebar.setContent("<h2><b>" + '{{API_Key}}' + " RAFT Node!</b></h2><p>RAFT shows Flood Level at <b>" + {{waterdepth}} + "</b></p><p>RAFT shows Rain Intensity at <b>" + {{rainintensity}} + "</b></p><p>");
				}).addTo(map);
					markerHome.bindPopup("<center><b>" + '{{API_Key}}' + "</b><br>Flood Level: "+{{waterdepth}} + "<br>Rain Intensity " + {{rainintensity}} + "</center>");
			}
			
			else if(t == "rain"){ // t = 2 when flood filter is clicked on the menu
				document.getElementById("nofilter").classList.remove('active');
				if(rain < 10){

					LOCmarker = greengreen;
				
					
				}else if(rain >= 10 && rain < 20){
					LOCmarker = limelime;
					
					
				}else if (rain >= 20 && rain <30){
					LOCmarker = yellowyellow;
					
					
				}else if (rain >= 30 && rain < 40){
					LOCmarker = orangeorange;
					
					
				}else if(rain >= 40){
					LOCmarker = redred;
					
				}
				
				var markerHome = L.marker([{{latitude}}, {{longitude}}], { icon: LOCmarker }).on('click', function () {
				sidebar.show();
				sidebar.setContent("<h2><b>" + '{{API_Key}}' + " RAFT Node!</b></h2><p>RAFT shows Flood Level at <b>" + {{waterdepth}} + "</b></p><p>RAFT shows Rain Intensity at <b>" + {{rainintensity}} + "</b></p><p>");
				}).addTo(map);
				markerHome.bindPopup("<center><b>" + '{{API_Key}}' + "</b><br>Flood Level: "+{{waterdepth}} + "<br>Rain Intensity " + {{rainintensity}} + "</center>");
			
			} 
			
			else if(t == "none"){ //neither rain nor flood filters are on
				document.getElementById("nofilter").classList.add('active');
				if(flood < 20){
					if(rain < 10){
						LOCmarker = greengreen;
					} else if(rain >= 10 && rain < 20){
						LOCmarker = greenlime;
					} else if(rain >= 20 && rain <30){
						LOCmarker = greenyellow;
					} else if(rain >= 30 && rain <40){
						LOCmarker = greenorange;
					} else if(rain >= 40){
						LOCmarker = greenred;
					}
				
					
				}else if(flood >= 20 && flood < 40){
						if(rain < 10){
						LOCmarker = limegreen;
					} else if(rain >= 10 && rain < 20){
						LOCmarker = limelime;
					} else if(rain >= 20 && rain <30){
						LOCmarker = limeyellow;
					} else if(rain >= 30 && rain <40){
						LOCmarker = limeorange;
					} else if(rain >= 40){
						LOCmarker = limered;
					}
					
					
				}else if (flood >= 40 && flood <80){
					if(rain < 10){
						LOCmarker = yellowgreen;
					} else if(rain >= 10 && rain < 20){
						LOCmarker = yellowlime;
					} else if(rain >= 20 && rain <30){
						LOCmarker = yellowyellow;
					} else if(rain >= 30 && rain <40){
						LOCmarker = yelloworange;
					} else if(rain >= 40){
						LOCmarker = yellowred;
					}
					
					
				}else if (flood >= 80 && flood < 120){
					if(rain < 10){
						LOCmarker = orangegreen;
					} else if(rain >= 10 && rain < 20){
						LOCmarker = orangelime;
					} else if(rain >= 20 && rain <30){
						LOCmarker = orangeyellow;
					} else if(rain >= 30 && rain <40){
						LOCmarker = orangeorange;
					} else if(rain >= 40){
						LOCmarker = orangered;
					}
					
					
				}else if(flood >= 120){
					if(rain < 10){
						LOCmarker = redgreen;
					} else if(rain >= 10 && rain < 20){
						LOCmarker = redlime;
					} else if(rain >= 20 && rain <30){
						LOCmarker = redyellow;
					} else if(rain >= 30 && rain <40){
						LOCmarker = redorange;
					} else if(rain >= 40){
						LOCmarker = redred;
					}
					
				}
				
				var markerHome = L.marker([{{latitude}}, {{longitude}}], { icon: LOCmarker }).on('click', function () {
            sidebar.show();
			sidebar.setContent("<h2><b>" + '{{API_Key}}' + " RAFT Node!</b></h2><p>RAFT shows Flood Level at <b>" + {{waterdepth}} + "</b></p><p>RAFT shows Rain Intensity at <b>" + {{rainintensity}} + "</b></p><p>");
        }).addTo(map);
			markerHome.bindPopup("<center><b>" + '{{API_Key}}' + "</b><br>Flood Level: "+{{waterdepth}} + "<br>Rain Intensity " + {{rainintensity}} + "</center>");
			}
			
			
			
		
				
				
			
            
	
		
		
		{{/each}}
		
		if(t == 3){
			console.log("BAKIT");
			}
		
				var initiallength = arr.length;
				var i;
				var j;
		
				flag = 0;
				sortedarray = [];
				finalarray = [];
				
				for(j = 0; j < initiallength- 1; j++){
					console.log("Arr before splicing: " + arr);
					if(flag == 0){
						finalarray.push(arr[0]);
						console.log("final array: " + finalarray);
						arr.splice(0, 1);
						flag++
					} 
					
					sortedarray = [];
					
					for(i = 0; i < arr.length; i++){
						var x = L.GeometryUtil.distance(map, finalarray[j], arr[i]);
						sortedarray.push(x);
						console.log ("Distance from finalarr[" + j +"] to arr[" + i +"] is " + x);
						}
						
						var smallest = Math.min.apply(Math, sortedarray);
						var x = sortedarray.indexOf(smallest);
						finalarray.push(arr[x]);
						//console.log("x is: " + x);
						arr.splice(x,1);
						
						console.log("smallest:" + smallest);
						console.log("Arr after splicing: " + arr);
						console.log("final array: " + finalarray);
						
						
				}
		
		var polygon = L.polygon(finalarray).setStyle(myStyle).addTo(polyLayer);
		
		
		//var latilongi = L.latLng(arr[0][0], arr[0][1]);
		
		//var test = L.GeometryUtil.closest(map, polygon, latilongi);
		//console.log("Test: arr[0] is" + arr[0] + " nearest point is: " + test);
		
		
    </script>
</body>
</html>
